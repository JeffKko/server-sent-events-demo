# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  node: circleci/node@4.1
  # The heroku orb contains a set of prepackaged CircleCI configuration you can utilize to deploy applications to heroku
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/heroku
  # NOTE: Environment variables containing the necessary secrets can be setup in the CircleCI UI
  # See here https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
  heroku: circleci/heroku@1.2
  slack: circleci/slack@4.0

jobs:
  test:
    docker:
      - image: cimg/base:stable
    steps:
      # In the event the deployment has failed, alert the @here
      - run: echo "@@@@@ test my app @@@@@"
      - slack/notify:
          event: fail
          template: basic_fail_1
          mentions: "@here"
      # When there is a successful deployment, send a notification with a different template.
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run: echo "@@@@@ deploy my app @@@@@"
      - heroku/deploy-via-git:
          force: true # this parameter instructs the push to use a force flag when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  
  test-and-deploy:
    jobs:
      - node/test
      - test:
          requires:
            - node/test # only run job if the build job has completed
      - deploy:
          requires:
            - test
          filters:
            branches:
              # This sample config runs this job on any branch matching the regex below, however, it's more likely you want to only run this job on master.
              only: /.*-heroku-deploy/
              # only: master
